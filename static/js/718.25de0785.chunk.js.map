{"version":3,"file":"static/js/718.25de0785.chunk.js","mappings":"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","sources":["webpack://banda/./src/components/FormField/FormField.module.css?80b0","components/FormField/FormField.jsx","webpack://banda/./src/components/SignUpForm/SignUpForm.module.css?655f","components/SignUpForm/SignUpForm.jsx","webpack://banda/./src/pages/SignUp/SignUp.module.css?4294","pages/SignUp/SignUp.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"FormField_input__RHMl7\",\"inputInvalid\":\"FormField_inputInvalid__Pvrqu\",\"inputValid\":\"FormField_inputValid__WIV4W\",\"errorMessage\":\"FormField_errorMessage__00MFN\",\"errorIcon\":\"FormField_errorIcon__m3Odm\",\"successMessage\":\"FormField_successMessage__LnwqL\",\"successIcon\":\"FormField_successIcon__9TOFu\",\"static\":\"FormField_static__L2Yv8\",\"ErrorInfo\":\"FormField_ErrorInfo__9HKm+\"};","import { Field, useFormikContext } from 'formik';\nimport styles from './FormField.module.css';\nimport symbolDefs from '../../images/symbol-defs.svg';\n\nconst FormField = props => {\n  const { name, className, ...rest } = props;\n  const { values, handleChange, handleBlur, errors, touched } =\n    useFormikContext();\n  const invalid = errors[name] && touched[name];\n\n  return (\n    <div>\n      <Field\n        className={`${styles.input} ${values[name] !== ''\n            ? invalid\n              ? styles.inputInvalid\n              : styles.inputValid\n            : styles.input\n          } ${className || ''}`}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values[name]}\n        name={name}\n        {...rest}\n      />\n      {values[name] !== '' ? (\n        invalid ? (\n          <div className={styles.errorMessage}>\n            <svg className={styles.errorIcon}>\n              <use\n                href={symbolDefs + '#checkbox-circle-fill-icon'}\n                width=\"16\"\n                height=\"16\"\n              ></use>\n            </svg>\n            {name === \"email\" ? \n            (<p>Error {name}</p>) : \n            (<p className={styles.ErrorInfo}>\n              Min: 6 symbols, one uppercase letter, one lowercase letter, one number, one special symbol\n              </p>) \n              }\n          </div>\n        ) : (\n          <div className={styles.successMessage}>\n            <svg className={styles.successIcon}>\n              <use\n                href={symbolDefs + '#checkbox-circle-fill-icon'}\n                width=\"16\"\n                height=\"16\"\n              ></use>\n            </svg>\n            Success {name}\n          </div>\n        )\n      ) : (\n        <div className={styles.static}></div>\n      )}\n    </div>\n  );\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\nexport default {\"signUpBtn\":\"SignUpForm_signUpBtn__T2kVe\",\"singup\":\"SignUpForm_singup__MI+L1\"};","import React, { useRef } from 'react';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Form, Formik } from 'formik';\n\n\nimport styles from './SignUpForm.module.css';\nimport { register } from '../../redux/auth/operations';\nimport FormField from '../FormField';\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Please enter your name'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Please enter your email')\n    .matches(/^[\\w.-]+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/, 'Enter valid email'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{4,}$/,\n      'Min: 6 symbols, one uppercase letter, one lowercase letter, one number, one special symbol'\n    )\n    .required('Please enter your password'),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nfunction SignUpForm() {\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ email, password, name }, { resetForm }) => {\n    dispatch(register({ email, password, name }));\n    resetForm();\n  };\n\n  const formik = useRef();\n\n  return (\n    <>\n\n    <Formik\n    innerRef={formik}\n    initialValues={initialValues}\n    validationSchema={validationSchema}\n    onSubmit={onSubmit}\n  >\n    {({ handleChange, handleSubmit, errors }) => (\n      <Form className={styles.singin}>\n        <FormField\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={handleChange}\n          required\n        />\n        <FormField\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={handleChange}\n          autoComplete=\"email\"\n          required\n        />\n        <FormField\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={handleChange}\n          autoComplete=\"new-password\"\n          required\n        />\n\n        <button className={styles.signUpBtn} type=\"submit\">\n          Sign Up\n        </button>\n      </Form>\n    )}\n  </Formik></>\n    \n  );\n}\n\nexport default SignUpForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"backGround\":\"SignUp_backGround__QGG44\",\"screen\":\"SignUp_screen__bzizy\",\"enterText\":\"SignUp_enterText__jIQ6s\",\"noaccount\":\"SignUp_noaccount__cBFze\",\"link\":\"SignUp_link__SoRpb\",\"caloriesCountBox\":\"SignUp_caloriesCountBox__ZGWU-\",\"caloriesCountBack\":\"SignUp_caloriesCountBack__EUKR+\",\"runIcon\":\"SignUp_runIcon__VQIhn\",\"caloriesCount\":\"SignUp_caloriesCount__U83Qf\",\"caloriesTutorial\":\"SignUp_caloriesTutorial__kXo1c\",\"caloriesContent\":\"SignUp_caloriesContent__KcEEx\",\"videoCountBox\":\"SignUp_videoCountBox__cY3Ao\",\"videoCountBack\":\"SignUp_videoCountBack__1V20s\",\"videoPlayIcon\":\"SignUp_videoPlayIcon__T1SeZ\",\"videoCount\":\"SignUp_videoCount__UeALk\",\"videoTutorial\":\"SignUp_videoTutorial__QQKIM\"};","import SignUpForm from 'components/SignUpForm';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport symbolDefs from '../../images/symbol-defs.svg';\n\nimport styles from './SignUp.module.css';\nimport Container from '../../components/Container';\n\nfunction SignUp() {\n  return (\n    <section className={styles.backGround}>\n      <Container>\n        <div className={styles.screen}>\n          <div className={styles.videoCountBox}>\n            <div className={styles.videoCountBack}>\n              <svg className={styles.videoPlayIcon} width=\"12\" height=\"12\">\n                <use href={symbolDefs + '#play-symbol-icon'}></use>\n              </svg>\n            </div>\n            <div>\n              <p className={styles.videoCount}>350+</p>\n              <p className={styles.videoTutorial}>Video tutorial</p>\n            </div>\n          </div>\n          <div className={styles.caloriesCountBox}>\n            <div className={styles.caloriesCountBack}>\n              <svg className={styles.runIcon} width=\"17\" height=\"17\">\n                <use href={symbolDefs + '#run-icon'}></use>\n              </svg>\n            </div>\n            <div className={styles.caloriesContent}>\n              <p className={styles.caloriesCount}>500</p>\n              <p className={styles.caloriesTutorial}>cal</p>\n            </div>\n          </div>\n          <div className={styles.screen__content}>\n            <h2>Sign up</h2>\n            <p className={styles.enterText}>\n              Thank you for your interest in our platform. To complete the\n              registration process, please provide us with the following\n              information.\n            </p>\n\n            <SignUpForm />\n\n            <p className={styles.noaccount}>\n              Already have account?\n              <NavLink to=\"/singin\" className={styles.link}>\n                Sign In\n              </NavLink>\n            </p>\n          </div>\n        </div>\n      </Container>\n    </section>\n  );\n}\n\nexport default SignUp;\n"],"names":["props","name","className","rest","_objectWithoutProperties","_excluded","_useFormikContext","useFormikContext","values","handleChange","handleBlur","errors","touched","invalid","_jsxs","children","_jsx","Field","_objectSpread","concat","styles","onChange","onBlur","value","href","symbolDefs","width","height","validationSchema","Yup","required","email","matches","password","initialValues","dispatch","useDispatch","formik","useRef","_Fragment","Formik","innerRef","onSubmit","_ref","_ref2","resetForm","register","_ref3","handleSubmit","Form","FormField","type","placeholder","autoComplete","Container","SignUpForm","NavLink","to"],"sourceRoot":""}