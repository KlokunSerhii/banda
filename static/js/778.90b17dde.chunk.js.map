{"version":3,"file":"static/js/778.90b17dde.chunk.js","mappings":"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","sources":["webpack://banda/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://banda/./src/components/FormField/FormField.module.css?80b0","components/FormField/FormField.jsx","webpack://banda/./src/components/SignInForm/SignInForm.module.css?03fb","components/SignInForm/SignInForm.jsx","webpack://banda/./src/pages/SignIn/SignIn.module.css?5e45","pages/SignIn/SignIn.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import css from './Container.module.css';\n\nconst Container = ({ children, className = '' }) => {\n  return <div className={`${css.container} ${className}`}>{children}</div>;\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"FormField_input__RHMl7\",\"inputInvalid\":\"FormField_inputInvalid__Pvrqu\",\"inputValid\":\"FormField_inputValid__WIV4W\",\"errorMessage\":\"FormField_errorMessage__00MFN\",\"errorIcon\":\"FormField_errorIcon__m3Odm\",\"successMessage\":\"FormField_successMessage__LnwqL\",\"successIcon\":\"FormField_successIcon__9TOFu\",\"static\":\"FormField_static__L2Yv8\",\"ErrorInfo\":\"FormField_ErrorInfo__9HKm+\"};","import { Field, useFormikContext } from 'formik';\nimport styles from './FormField.module.css';\nimport symbolDefs from '../../images/symbol-defs.svg';\n\nconst FormField = props => {\n  const { name, className, ...rest } = props;\n  const { values, handleChange, handleBlur, errors, touched } =\n    useFormikContext();\n  const invalid = errors[name] && touched[name];\n\n  return (\n    <div>\n      <Field\n        className={`${styles.input} ${values[name] !== ''\n            ? invalid\n              ? styles.inputInvalid\n              : styles.inputValid\n            : styles.input\n          } ${className || ''}`}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values[name]}\n        name={name}\n        {...rest}\n      />\n      {values[name] !== '' ? (\n        invalid ? (\n          <div className={styles.errorMessage}>\n            <svg className={styles.errorIcon}>\n              <use\n                href={symbolDefs + '#checkbox-circle-fill-icon'}\n                width=\"16\"\n                height=\"16\"\n              ></use>\n            </svg>\n            {name === \"email\" ? \n            (<p>Error {name}</p>) : \n            (<p className={styles.ErrorInfo}>\n              Min: 6 symbols, one uppercase letter, one lowercase letter, one number, one special symbol\n              </p>) \n              }\n          </div>\n        ) : (\n          <div className={styles.successMessage}>\n            <svg className={styles.successIcon}>\n              <use\n                href={symbolDefs + '#checkbox-circle-fill-icon'}\n                width=\"16\"\n                height=\"16\"\n              ></use>\n            </svg>\n            Success {name}\n          </div>\n        )\n      ) : (\n        <div className={styles.static}></div>\n      )}\n    </div>\n  );\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\nexport default {\"signInBtn\":\"SignInForm_signInBtn__RJ-mF\",\"singin\":\"SignInForm_singin__qZv0x\"};","import React, { useRef } from 'react';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport FormField from '../FormField';\n\n\nimport styles from './SignInForm.module.css';\nimport { login } from '../../redux/auth/operations';\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Please enter your email')\n    .matches(/^[\\w.-]+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/, 'Enter valid email'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{4,}$/,\n      'Min: 6 symbols, one uppercase letter, one lowercase letter, one number, one special symbol'\n    )\n    .required('Please enter your password'),\n});\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nfunction SignInForm() {\n  const dispatch = useDispatch();\n  const onSubmit = ({ email, password }, { resetForm }) => {\n      dispatch(login({ email, password })); \n      resetForm()\n  };\n\n  const formik = useRef();\n\n  return (\n    <>\n\n      <Formik\n        innerRef={formik}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ handleChange, handleSubmit, errors }) => (\n          <Form className={styles.singin}>\n            <FormField\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={handleChange}\n              autoComplete=\"email\"\n              required\n            />\n            <FormField\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              autoComplete=\"current-password\"\n              required\n            />\n            <button className={styles.signInBtn} type=\"submit\">\n              Sign In\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </>\n\n  );\n}\n\nexport default SignInForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"backGround\":\"SignIn_backGround__ZAtvB\",\"screen\":\"SignIn_screen__vpF3i\",\"enterText\":\"SignIn_enterText__TR9d4\",\"noaccount\":\"SignIn_noaccount__mBxax\",\"link\":\"SignIn_link__o+hag\",\"caloriesCountBox\":\"SignIn_caloriesCountBox__jDEPA\",\"caloriesCountBack\":\"SignIn_caloriesCountBack__zENlc\",\"runIcon\":\"SignIn_runIcon__l737U\",\"caloriesCount\":\"SignIn_caloriesCount__u5Zzm\",\"caloriesTutorial\":\"SignIn_caloriesTutorial__49G2c\",\"caloriesContent\":\"SignIn_caloriesContent__SL8dG\",\"videoCountBox\":\"SignIn_videoCountBox__HgeBN\",\"videoCountBack\":\"SignIn_videoCountBack__mtvOs\",\"videoPlayIcon\":\"SignIn_videoPlayIcon__wRdgs\",\"videoCount\":\"SignIn_videoCount__JOS-D\",\"videoTutorial\":\"SignIn_videoTutorial__KQTmT\"};","import Container from 'components/Container';\nimport SignInForm from 'components/SignInForm';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './SignIn.module.css';\nimport symbolDefs from '../../images/symbol-defs.svg';\n\nfunction SignIn() {\n  return (\n    <section className={styles.backGround}>\n      <Container>\n        <div className={styles.screen}>\n          <div className={styles.videoCountBox}>\n            <div className={styles.videoCountBack}>\n              <svg className={styles.videoPlayIcon} width=\"12\" height=\"12\">\n                <use href={symbolDefs + '#play-symbol-icon'}></use>\n              </svg>\n            </div>\n            <div>\n              <p className={styles.videoCount}>350+</p>\n              <p className={styles.videoTutorial}>Video tutorial</p>\n            </div>\n          </div>\n          <div className={styles.caloriesCountBox}>\n            <div className={styles.caloriesCountBack}>\n              <svg className={styles.runIcon} width=\"17\" height=\"17\">\n                <use href={symbolDefs + '#run-icon'}></use>\n              </svg>\n            </div>\n            <div className={styles.caloriesContent}>\n              <p className={styles.caloriesCount}>500</p>\n              <p className={styles.caloriesTutorial}>cal</p>\n            </div>\n          </div>\n          <h2>Sign in</h2>\n          <p className={styles.enterText}>\n            Please enter your credentials to login to the platform:\n          </p>\n\n          <SignInForm />\n\n          <p className={styles.noaccount}>\n            Don't have an account?\n            <NavLink to=\"/singup\" className={styles.link}>\n              Sign Up\n            </NavLink>\n          </p>\n        </div>\n      </Container>\n    </section>\n  );\n}\n\nexport default SignIn;\n"],"names":["_ref","children","_ref$className","className","_jsx","concat","css","props","name","rest","_objectWithoutProperties","_excluded","_useFormikContext","useFormikContext","values","handleChange","handleBlur","errors","touched","invalid","_jsxs","Field","_objectSpread","styles","onChange","onBlur","value","href","symbolDefs","width","height","validationSchema","Yup","email","required","matches","password","initialValues","dispatch","useDispatch","formik","useRef","_Fragment","Formik","innerRef","onSubmit","_ref2","resetForm","login","_ref3","handleSubmit","Form","FormField","type","placeholder","autoComplete","Container","SignInForm","NavLink","to"],"sourceRoot":""}